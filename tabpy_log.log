2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter port set to "9004" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter server_version set to "1.0.0" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter evaluate_timeout set to "30" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter upload_dir set to "c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\tabpy\tmp\query_objects" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter transfer_protocol set to "http" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:212): Parameter certificate_file is not set
2020-03-04,16:33:30 [DEBUG] (app.py:app:212): Parameter key_file is not set
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter state_file_path set to "c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\tabpy\tabpy_server" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter static_path set to "c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\tabpy\tabpy_server\static" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:212): Parameter TABPY_PWD_FILE is not set
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter log_request_context set to "false" from default value
2020-03-04,16:33:30 [DEBUG] (app.py:app:205): Parameter max_request_size_in_mb set to "100" from default value
2020-03-04,16:33:30 [INFO] (app.py:app:436): Loading state from state file C:\Users\sivkumar\AppData\Local\Programs\Python\Python38-32\Lib\site-packages\tabpy\tabpy_server\state.ini
2020-03-04,16:33:30 [DEBUG] (app.py:app:314): Static pages folder set to "c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\tabpy\tabpy_server\static"
2020-03-04,16:33:30 [INFO] (app.py:app:333): Password file is not specified: Authentication is not enabled
2020-03-04,16:33:30 [INFO] (app.py:app:348): Call context logging is disabled
2020-03-04,16:33:30 [INFO] (app.py:app:125): Initializing TabPy...
2020-03-04,16:33:30 [DEBUG] (proactor_events.py:proactor_events:623): Using proactor: IocpProactor
2020-03-04,16:33:30 [INFO] (callbacks.py:callbacks:43): Initializing TabPy Server...
2020-03-04,16:33:30 [DEBUG] (state.py:state:594): Loading option 'None' from section [Query Objects Service Versions]...
2020-03-04,16:33:30 [DEBUG] (state.py:state:616): Returning value '[]'
2020-03-04,16:33:30 [DEBUG] (state.py:state:148): Collected endpoints: {}
2020-03-04,16:33:30 [INFO] (app.py:app:129): Done initializing TabPy.
2020-03-04,16:33:30 [DEBUG] (selector_events.py:selector_events:59): Using selector: SelectSelector
2020-03-04,16:33:30 [INFO] (app.py:app:83): Setting max request size to 104857600 bytes
2020-03-04,16:33:30 [INFO] (callbacks.py:callbacks:64): Initializing models...
2020-03-04,16:33:30 [DEBUG] (state.py:state:594): Loading option 'None' from section [Query Objects Service Versions]...
2020-03-04,16:33:30 [DEBUG] (state.py:state:616): Returning value '[]'
2020-03-04,16:33:30 [DEBUG] (state.py:state:148): Collected endpoints: {}
2020-03-04,16:33:30 [INFO] (app.py:app:106): Web service listening on port 9004
2020-03-04,16:41:26 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:41:26 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:41:26 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:41:26 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:41:26 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:41:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:26 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:41:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:26 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:41:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:26 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:41:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:27 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:41:27 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:41:27 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:41:27 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:41:27 [INFO] (web.py:web:2242): 200 GET /info (::1) 1682.07ms
2020-03-04,16:41:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:41:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:41:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:41:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:41:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:41:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:41:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:41:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:41:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:41:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 818.81ms
2020-03-04,16:41:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:41:29 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:41:29 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:41:29 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:41:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:41:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:41:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:41:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:41:29 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:41:29 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:41:29 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ModuleNotFoundError : No module named 'statsmodels'"
2020-03-04,16:41:29 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 380.98ms
2020-03-04,16:46:37 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:46:37 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:46:37 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:46:37 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:46:37 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:46:37 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:46:37 [INFO] (web.py:web:2242): 200 GET /info (::1) 17.95ms
2020-03-04,16:46:37 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:46:37 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:46:37 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:46:38 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:46:38 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:46:38 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,16:46:38 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:46:38 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:46:38 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:46:38 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:46:38 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:46:38 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:46:38 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:46:38 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ModuleNotFoundError : No module named 'statsmodels'"
2020-03-04,16:46:38 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 18.95ms
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:49:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:49:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:49:40 [INFO] (web.py:web:2242): 200 GET /info (::1) 25.93ms
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:49:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:49:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:49:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:49:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 9.97ms
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:49:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:49:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:49:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:49:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:49:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:49:41 [DEBUG] (__init__.py:__init__:276): $HOME=C:\Users\sivkumar
2020-03-04,16:49:41 [DEBUG] (__init__.py:__init__:276): CONFIGDIR=C:\Users\sivkumar\.matplotlib
2020-03-04,16:49:41 [DEBUG] (__init__.py:__init__:276): matplotlib data path: c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\matplotlib\mpl-data
2020-03-04,16:49:41 [DEBUG] (__init__.py:__init__:1007): loaded rc file c:\users\sivkumar\appdata\local\programs\python\python38-32\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-03-04,16:49:42 [DEBUG] (__init__.py:__init__:1644): matplotlib version 3.1.2
2020-03-04,16:49:42 [DEBUG] (__init__.py:__init__:1645): interactive is False
2020-03-04,16:49:42 [DEBUG] (__init__.py:__init__:1646): platform is win32
2020-03-04,16:49:42 [DEBUG] (__init__.py:__init__:1647): loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_frozen_importlib_external', '_io', 'marshal', 'nt', '_thread', '_weakref', 'winreg', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', 'genericpath', 'ntpath', 'os.path', '_collections_abc', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'mpl_toolkits', 'pywin32_bootstrap', 'zope', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', '__main__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'tabpy', 'docopt', 'posixpath', 'fnmatch', 'errno', 'urllib', 'urllib.parse', 'pathlib', 'tabpy.tabpy', 'tabpy.tabpy_server', 'tabpy.tabpy_server.app', 'concurrent', 'token', 'tokenize', 'linecache', 'traceback', 'collections.abc', '_string', 'string', 'threading', 'atexit', 'logging', 'concurrent.futures._base', 'concurrent.futures', 'configparser', '_socket', 'math', 'select', 'selectors', 'socket', '_struct', 'struct', '_compat_pickle', '_pickle', 'pickle', '_queue', 'queue', 'copy', 'logging.handlers', 'socketserver', 'logging.config', 'signal', 'multiprocessing.process', '_winapi', 'multiprocessing.reduction', 'multiprocessing.context', '__mp_main__', 'multiprocessing', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'tabpy.tabpy_server.app.ConfigParameters', 'tabpy.tabpy_server.app.SettingsParameters', '_csv', 'csv', '_datetime', 'datetime', 'binascii', 'base64', '__future__', 'six', 'cryptography.__about__', 'cryptography', 'cryptography.x509.certificate_transparency', '_opcode', 'opcode', 'dis', 'inspect', 'cryptography.utils', 'cryptography.hazmat', 'cryptography.hazmat.primitives', 'cryptography.hazmat.primitives.asymmetric', 'cryptography.hazmat.primitives.asymmetric.dsa', 'cryptography.hazmat._oid', 'cryptography.hazmat.primitives.asymmetric.ec', 'cryptography.exceptions', 'cryptography.hazmat.primitives.asymmetric.ed25519', 'cryptography.hazmat.primitives.asymmetric.ed448', 'cryptography.hazmat.backends', 'cryptography.hazmat.backends.interfaces', 'cryptography.hazmat.primitives.asymmetric.rsa', '_hashlib', '_blake2', '_sha3', 'hashlib', 'ipaddress', 'cryptography.hazmat._der', 'hmac', 'cryptography.hazmat.bindings', '_cffi_backend', '_constant_time.lib', '_constant_time', 'cryptography.hazmat.bindings._constant_time', 'cryptography.hazmat.primitives.constant_time', 'cryptography.hazmat.primitives.serialization.base', 'cryptography.hazmat.primitives.serialization.ssh', 'cryptography.hazmat.primitives.serialization', 'email', '_bisect', 'bisect', '_sha512', '_random', 'random', 'locale', 'calendar', 'email._parseaddr', 'email.base64mime', 'email.quoprimime', 'email.errors', 'quopri', 'email.encoders', 'email.charset', 'email.utils', 'six.moves', 'cryptography.hazmat.primitives.hashes', 'cryptography.x509.oid', 'cryptography.x509.name', 'cryptography.x509.general_name', 'cryptography.x509.extensions', 'cryptography.x509.base', 'cryptography.x509', 'cryptography.hazmat.bindings.openssl', '_openssl.lib', '_openssl', 'cryptography.hazmat.bindings._openssl', 'cryptography.hazmat.bindings.openssl._conditional', '_ssl', 'cryptography.hazmat.bindings.openssl.binding', 'OpenSSL._util', 'OpenSSL.crypto', 'OpenSSL.SSL', 'OpenSSL.version', 'OpenSSL', 'tabpy.tabpy_server.app.util', 'tabpy.tabpy_server.management', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'tabpy.tabpy_server.management.util', 'tabpy.tabpy_server.management.state', 'tabpy.tabpy_server.psws', 'tabpy.tabpy_server.common', 'tabpy.tabpy_server.common.messages', 'tabpy.tabpy_server.common.endpoint_file_mgr', 'tabpy.tabpy_server.common.util', 'tornado', 'msvcrt', 'subprocess', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'typing.io', 'typing.re', 'typing', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'tempfile', 'asyncio.windows_utils', 'asyncio.windows_events', 'asyncio', 'html.entities', 'html', 'array', 'tornado.util', 'tornado.escape', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'ctypes.wintypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'tornado.log', 'tornado.concurrent', 'numbers', 'tornado.ioloop', 'tornado.gen', 'tabpy.tabpy_server.psws.callbacks', 'tabpy.tabpy_tools', 'platform', 'uuid', 'cloudpickle.cloudpickle', 'cloudpickle.cloudpickle_fast', 'cloudpickle', 'tabpy.tabpy_tools.query_object', 'tabpy.tabpy_server.psws.python_service', 'gzip', 'http', 'http.cookies', 'mimetypes', 'email.header', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'unicodedata', 'tornado.httputil', 'tornado.platform', 'tornado.platform.windows', 'tornado.platform.auto', 'stringprep', 'encodings.idna', 'concurrent.futures.thread', 'tornado.netutil', 'tornado.iostream', 'tornado.http1connection', 'tornado.process', 'tornado.tcpserver', 'tornado.httpserver', 'gettext', 'tornado._locale_data', 'tornado.locale', 'tornado.template', 'tornado.routing', 'tornado.web', 'tabpy.tabpy_server.handlers.util', 'tabpy.tabpy_server.handlers.base_handler', 'tabpy.tabpy_server.handlers.main_handler', 'tabpy.tabpy_server.handlers.management_handler', 'tabpy.tabpy_server.handlers.endpoint_handler', 'tabpy.tabpy_server.handlers.endpoints_handler', '_decimal', 'decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'urllib3.packages.ssl_match_hostname', 'urllib3.packages', 'urllib3.packages.six', 'urllib3.packages.six.moves', 'urllib3.packages.six.moves.http_client', 'urllib3.exceptions', 'urllib3.util.wait', 'urllib3.contrib', 'urllib3.contrib._appengine_environ', 'urllib3.util.connection', 'urllib3.util.request', 'urllib3.util.response', 'urllib3.util.ssl_', 'urllib3.util.timeout', 'urllib3.util.retry', 'urllib3.packages.six.moves.urllib', 'urllib3.packages.six.moves.urllib.parse', 'urllib3.util.url', 'urllib3.util', 'urllib3._collections', 'urllib3.connection', 'urllib3.fields', 'urllib3.filepost', 'urllib3.request', 'urllib3.response', 'urllib3.util.queue', 'urllib3.connectionpool', 'urllib3.poolmanager', 'urllib3', 'chardet.compat', 'chardet.enums', 'chardet.charsetprober', 'chardet.charsetgroupprober', 'chardet.codingstatemachine', 'chardet.escsm', 'chardet.escprober', 'chardet.latin1prober', 'chardet.mbcssm', 'chardet.utf8prober', 'chardet.mbcharsetprober', 'chardet.euctwfreq', 'chardet.euckrfreq', 'chardet.gb2312freq', 'chardet.big5freq', 'chardet.jisfreq', 'chardet.chardistribution', 'chardet.jpcntx', 'chardet.sjisprober', 'chardet.eucjpprober', 'chardet.gb2312prober', 'chardet.euckrprober', 'chardet.cp949prober', 'chardet.big5prober', 'chardet.euctwprober', 'chardet.mbcsgroupprober', 'chardet.sbcharsetprober', 'chardet.langcyrillicmodel', 'chardet.langgreekmodel', 'chardet.langbulgarianmodel', 'chardet.langthaimodel', 'chardet.langhebrewmodel', 'chardet.hebrewprober', 'chardet.langturkishmodel', 'chardet.sbcsgroupprober', 'chardet.universaldetector', 'chardet.version', 'chardet', 'requests.exceptions', 'cryptography.hazmat.backends.openssl.aead', 'cryptography.hazmat.primitives.ciphers.modes', 'cryptography.hazmat.primitives.ciphers.base', 'cryptography.hazmat.primitives.ciphers', 'cryptography.hazmat.backends.openssl.ciphers', 'cryptography.hazmat.backends.openssl.cmac', 'cryptography.hazmat.backends.openssl.decode_asn1', 'cryptography.hazmat.primitives.asymmetric.dh', 'cryptography.hazmat.backends.openssl.dh', 'cryptography.hazmat.primitives.asymmetric.utils', 'cryptography.hazmat.backends.openssl.utils', 'cryptography.hazmat.backends.openssl.dsa', 'cryptography.hazmat.backends.openssl.ec', 'cryptography.hazmat.backends.openssl.ed25519', 'cryptography.hazmat.backends.openssl.ed448', 'cryptography.hazmat.backends.openssl.encode_asn1', 'cryptography.hazmat.backends.openssl.hashes', 'cryptography.hazmat.backends.openssl.hmac', 'cryptography.hazmat.backends.openssl.x509', 'cryptography.x509.ocsp', 'cryptography.hazmat.backends.openssl.ocsp', 'cryptography.hazmat.backends.openssl.poly1305', 'cryptography.hazmat.primitives.asymmetric.padding', 'cryptography.hazmat.backends.openssl.rsa', 'cryptography.hazmat.primitives.asymmetric.x25519', 'cryptography.hazmat.backends.openssl.x25519', 'cryptography.hazmat.primitives.asymmetric.x448', 'cryptography.hazmat.backends.openssl.x448', 'cryptography.hazmat.primitives.ciphers.algorithms', 'cryptography.hazmat.primitives.kdf', 'cryptography.hazmat.primitives.kdf.scrypt', 'cryptography.hazmat.backends.openssl.backend', 'cryptography.hazmat.backends.openssl', 'urllib3.packages.backports', 'urllib3.packages.backports.makefile', 'urllib3.contrib.pyopenssl', 'requests.__version__', 'zipfile', 'certifi.core', 'certifi', 'requests.certs', 'urllib.response', 'urllib.error', 'nturl2path', 'urllib.request', 'http.cookiejar', 'requests.compat', 'requests._internal_utils', 'requests.cookies', 'requests.structures', 'requests.utils', 'requests.packages.urllib3.packages.ssl_match_hostname', 'requests.packages.urllib3.packages', 'requests.packages.urllib3.packages.six', 'requests.packages.urllib3.packages.six.moves', 'requests.packages.urllib3.packages.six.moves.http_client', 'requests.packages.urllib3.exceptions', 'requests.packages.urllib3.util.wait', 'requests.packages.urllib3.contrib', 'requests.packages.urllib3.contrib._appengine_environ', 'requests.packages.urllib3.util.connection', 'requests.packages.urllib3.util.request', 'requests.packages.urllib3.util.response', 'requests.packages.urllib3.util.ssl_', 'requests.packages.urllib3.util.timeout', 'requests.packages.urllib3.util.retry', 'requests.packages.urllib3.packages.six.moves.urllib', 'requests.packages.urllib3.packages.six.moves.urllib.parse', 'requests.packages.urllib3.util.url', 'requests.packages.urllib3.util', 'requests.packages.urllib3._collections', 'requests.packages.urllib3.connection', 'requests.packages.urllib3.fields', 'requests.packages.urllib3.filepost', 'requests.packages.urllib3.request', 'requests.packages.urllib3.response', 'requests.packages.urllib3.util.queue', 'requests.packages.urllib3.connectionpool', 'requests.packages.urllib3.poolmanager', 'requests.packages.urllib3', 'requests.packages.urllib3.packages.backports', 'requests.packages.urllib3.packages.backports.makefile', 'requests.packages.urllib3.contrib.pyopenssl', 'idna.package_data', 'idna.idnadata', 'idna.intranges', 'idna.core', 'idna', 'requests.packages.idna.package_data', 'requests.packages.idna.idnadata', 'requests.packages.idna.intranges', 'requests.packages.idna.core', 'requests.packages.idna', 'requests.packages.chardet.compat', 'requests.packages.chardet.enums', 'requests.packages.chardet.charsetprober', 'requests.packages.chardet.charsetgroupprober', 'requests.packages.chardet.codingstatemachine', 'requests.packages.chardet.escsm', 'requests.packages.chardet.escprober', 'requests.packages.chardet.latin1prober', 'requests.packages.chardet.mbcssm', 'requests.packages.chardet.utf8prober', 'requests.packages.chardet.mbcharsetprober', 'requests.packages.chardet.euctwfreq', 'requests.packages.chardet.euckrfreq', 'requests.packages.chardet.gb2312freq', 'requests.packages.chardet.big5freq', 'requests.packages.chardet.jisfreq', 'requests.packages.chardet.chardistribution', 'requests.packages.chardet.jpcntx', 'requests.packages.chardet.sjisprober', 'requests.packages.chardet.eucjpprober', 'requests.packages.chardet.gb2312prober', 'requests.packages.chardet.euckrprober', 'requests.packages.chardet.cp949prober', 'requests.packages.chardet.big5prober', 'requests.packages.chardet.euctwprober', 'requests.packages.chardet.mbcsgroupprober', 'requests.packages.chardet.sbcharsetprober', 'requests.packages.chardet.langcyrillicmodel', 'requests.packages.chardet.langgreekmodel', 'requests.packages.chardet.langbulgarianmodel', 'requests.packages.chardet.langthaimodel', 'requests.packages.chardet.langhebrewmodel', 'requests.packages.chardet.hebrewprober', 'requests.packages.chardet.langturkishmodel', 'requests.packages.chardet.sbcsgroupprober', 'requests.packages.chardet.universaldetector', 'requests.packages.chardet.version', 'requests.packages.chardet', 'requests.packages', 'requests.hooks', 'requests.auth', 'requests.status_codes', 'requests.models', 'requests.adapters', 'requests.sessions', 'requests.api', 'requests', 'tabpy.tabpy_server.handlers.evaluation_plane_handler', 'tabpy.tabpy_server.handlers.query_plane_handler', 'tabpy.tabpy_server.handlers.service_info_handler', 'tabpy.tabpy_server.handlers.status_handler', 'tabpy.tabpy_server.handlers.upload_destination_handler', 'tabpy.tabpy_server.handlers', 'tabpy.tabpy_server.app.app', 'tornado.platform.asyncio', 'statsmodels._version', 'statsmodels', 'statsmodels.api', 'statsmodels.iolib', 'statsmodels.iolib.foreign', 'statsmodels.compat', 'statsmodels.tools', 'statsmodels.tools.tools', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'glob', 'numpy._distributor_init', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', '_ast', 'ast', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'cython_runtime', '_cython_0_29_14', 'numpy.random._common', 'secrets', 'numpy.random._bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'numpy.ma.mrecords', 'unittest.util', 'unittest.result', 'difflib', 'pprint', 'unittest.case', 'unittest.async_case', 'unittest.suite', 'unittest.loader', 'argparse', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'gc', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'numpy.lib.recfunctions', 'pandas', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'dateutil._version', 'dateutil', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.numpy', '_cython_0_29_13', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.tz.tz', 'dateutil.tz', 'pandas._libs.tslibs.timezones', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'backports_abc', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.ccalendar', 'dateutil._common', 'dateutil.relativedelta', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.c_timestamp', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs', 'pandas._libs', 'pandas._libs.missing', 'pandas._libs.hashtable', 'fractions', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.errors', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas._typing', 'pandas.core.dtypes.common', 'pandas.core.arrays.array_', 'pandas._libs.properties', 'pandas.util._decorators', 'pandas.core.util', 'pandas._libs.hashing', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.cast', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util._validators', 'pandas.compat.numpy.function', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.ops.roperator', 'pandas.core.ops.missing', 'pandas.core.ops.docstrings', 'pandas.core.ops', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.accessor', 'pandas.compat._optional', 'pandas.core.nanops', 'pandas.core.base', 'pandas.core.missing', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.tseries.offsets', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.datetimes', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.io.formats.printing', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas._libs.sparse', 'pandas.core.arrays.sparse', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.indexes.category', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.indexes.datetimes', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.index', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.blocks', 'pandas.core.internals.concat', 'pandas.core.internals.managers', 'pandas.core.internals', 'mmap', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.generic', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._matplotlib', 'pandas.plotting._matplotlib.boxplot', 'matplotlib', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-03-04,16:49:42 [DEBUG] (__init__.py:__init__:276): CACHEDIR=C:\Users\sivkumar\.matplotlib
2020-03-04,16:49:42 [DEBUG] (font_manager.py:font_manager:1360): Using fontManager instance from C:\Users\sivkumar\.matplotlib\fontlist-v310.json
2020-03-04,16:49:53 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="LinAlgError : Singular matrix"
2020-03-04,16:49:53 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 12905.29ms
2020-03-04,16:50:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:26 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:26 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:50:26 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:27 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:50:27 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:50:27 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:50:27 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:50:27 [INFO] (web.py:web:2242): 200 GET /info (::1) 2553.73ms
2020-03-04,16:50:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:50:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:50:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 522.60ms
2020-03-04,16:50:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:50:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:50:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11825.36ms
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:50:40 [INFO] (web.py:web:2242): 200 GET /info (::1) 13.95ms
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:50:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:50:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:50:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:50:53 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13494.67ms
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:50:53 [INFO] (web.py:web:2242): 200 GET /info (::1) 22.94ms
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:50:53 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:50:53 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11.97ms
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:50:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:50:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:50:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:50:53 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:50:53 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:51:06 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12782.44ms
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:51:16 [INFO] (web.py:web:2242): 200 GET /info (::1) 15.95ms
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:51:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:51:16 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.97ms
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:51:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:51:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11738.42ms
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:51:28 [INFO] (web.py:web:2242): 200 GET /info (::1) 12.96ms
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:51:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:51:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13.96ms
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:51:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:51:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:51:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:51:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:51:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:51:41 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13103.99ms
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:52:35 [INFO] (web.py:web:2242): 200 GET /info (::1) 10.97ms
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:52:35 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:52:35 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13.96ms
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:35 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:52:35 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:52:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 14256.09ms
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:52:50 [INFO] (web.py:web:2242): 200 GET /info (::1) 37.90ms
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:52:50 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:52:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 9.97ms
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:52:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:52:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:52:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:52:50 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:52:50 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:53:03 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12867.69ms
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:13 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:13 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:54:13 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:13 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:13 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:54:13 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:54:13 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 18.95ms
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:13 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:13 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:13 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:13 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None], '_arg2': [484247.49810000096, 470532.50899999985, 609205.5980000008, 733215.2551999999], '_arg3': [12, 12, 12, 12], '_arg4': [12, 12, 12, 12], '_arg5': [0, 0, 0, 0], '_arg6': [0, 0, 0, 0]}}'...
2020-03-04,16:54:13 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:54:14 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : Insufficient degrees of freedom to estimate"
2020-03-04,16:54:14 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 20.94ms
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:54:25 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:54:25 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:54:25 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 15.96ms
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:25 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [74447.7960000001, 86538.75959999999, 143633.21229999998, 179627.7302000002, 68851.73859999994, 89124.18699999987, 130259.57519999995, 182297.00819999998, 93237.18099999995, 136082.30100000004, 143787.36219999992, 236098.75379999995, 123144.86019999994, 133764.37199999994, 196251.9560000002, 280054.067], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:54:25 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:54:25 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : The computed initial AR coefficients are not stationary
You should induce stationarity, choose a different model order, or you can
pass your own start_params."
2020-03-04,16:54:25 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 21.94ms
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:54:32 [INFO] (web.py:web:2242): 200 GET /info (::1) 12.96ms
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:54:32 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:54:32 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 16.95ms
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:32 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None], '_arg2': [359681.5758, 445509.61960000114, 613932.105700001, 878077.5591999982], '_arg3': [12, 12, 12, 12], '_arg4': [12, 12, 12, 12], '_arg5': [0, 0, 0, 0], '_arg6': [0, 0, 0, 0]}}'...
2020-03-04,16:54:32 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:54:32 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : Insufficient degrees of freedom to estimate"
2020-03-04,16:54:32 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 31.91ms
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:54:40 [INFO] (web.py:web:2242): 200 GET /info (::1) 19.94ms
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:54:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:54:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:54:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:54:53 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12931.09ms
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:54:53 [INFO] (web.py:web:2242): 200 GET /info (::1) 13.96ms
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:54:53 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:54:53 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:54:53 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:54:53 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:54:53 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:54:53 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:54:53 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:55:09 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 16238.05ms
2020-03-04,16:55:46 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:46 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:46 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:46 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:55:46 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:55:46 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:55:46 [INFO] (web.py:web:2242): 200 GET /info (::1) 226.39ms
2020-03-04,16:55:46 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:46 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:46 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:46 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:48 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:48 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:48 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:55:48 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:55:48 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 1643.66ms
2020-03-04,16:55:48 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:48 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:48 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:48 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:48 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:48 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:48 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:48 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:48 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:48 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:48 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:55:48 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:55:49 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : Insufficient degrees of freedom to estimate"
2020-03-04,16:55:49 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 562.01ms
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:55:55 [INFO] (web.py:web:2242): 200 GET /info (::1) 37.90ms
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:55:55 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:55:55 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.97ms
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:55:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:55:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:55:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:55:55 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:55:55 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:56:02 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="LinAlgError : SVD did not converge"
2020-03-04,16:56:02 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 7516.00ms
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:56:10 [INFO] (web.py:web:2242): 200 GET /info (::1) 12.97ms
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:56:10 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:56:10 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 30.92ms
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:10 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:56:10 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:56:22 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12628.90ms
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:22 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:22 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:56:22 [INFO] (web.py:web:2242): 200 GET /info (::1) 8.98ms
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:22 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:22 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:56:22 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:56:22 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 26.93ms
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:56:22 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:56:22 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:56:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:56:22 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:56:22 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:56:35 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12430.25ms
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:59:16 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:59:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:59:16 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:59:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:59:46 [ERROR] (base_handler.py:base_handler:121): User defined script timed out. Timeout is set to 30.0 s.
2020-03-04,16:59:46 [ERROR] (base_handler.py:base_handler:121): Responding with status=408, message="User defined script timed out. Timeout is set to 30.0 s.", info="None"
2020-03-04,16:59:46 [WARNING] (web.py:web:2242): 408 POST /evaluate (::1) 30022.39ms
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,16:59:56 [INFO] (web.py:web:2242): 200 GET /info (::1) 65.82ms
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,16:59:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,16:59:56 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 56.85ms
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,16:59:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,16:59:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,16:59:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,16:59:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,16:59:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,16:59:56 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : The computed initial AR coefficients are not stationary
You should induce stationarity, choose a different model order, or you can
pass your own start_params."
2020-03-04,16:59:56 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 51.86ms
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:08 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:08 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:00:08 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:08 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:08 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:00:08 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:00:08 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.95ms
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:08 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:08 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:08 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:08 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:00:08 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:00:20 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12653.28ms
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:20 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:20 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:00:20 [INFO] (web.py:web:2242): 200 GET /info (::1) 26.93ms
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:20 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:20 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:00:20 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:00:20 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:00:20 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:00:20 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:00:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:00:20 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:00:20 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:00:33 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13014.01ms
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:01:43 [INFO] (web.py:web:2242): 200 GET /info (::1) 11.97ms
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:01:43 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:01:43 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:43 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:01:43 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:01:55 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11864.97ms
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:01:55 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.97ms
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:01:55 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:01:55 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 33.91ms
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:01:55 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:01:55 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:01:55 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:01:55 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:01:55 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:02:08 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12941.90ms
2020-03-04,17:02:44 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:02:44 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:02:44 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:02:44 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:02:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:02:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:02:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:02:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:02:46 [INFO] (web.py:web:2242): 200 GET /info (::1) 1918.87ms
2020-03-04,17:02:46 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:02:46 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:02:46 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:02:46 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:02:46 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:02:46 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 282.29ms
2020-03-04,17:02:46 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:02:46 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:02:46 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:02:46 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:02:46 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:46 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:02:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:02:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:47 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:02:47 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:02:59 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13257.80ms
2020-03-04,17:02:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:02:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:02:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:02:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:02:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:02:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:02:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:02:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:02:59 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:02:59 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:03:00 [INFO] (web.py:web:2242): 200 GET /info (::1) 40.89ms
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:03:00 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:03:00 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:03:00 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:03:00 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12.97ms
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:03:00 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:03:00 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:03:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:03:00 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:03:00 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:03:12 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12359.77ms
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:05 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:05 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:04:05 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:05 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:05 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:04:05 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:04:05 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 32.91ms
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:05 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:05 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:05 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:05 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:04:05 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:04:16 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11686.71ms
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:04:17 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:04:17 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:04:17 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:04:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:04:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:04:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:04:17 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:04:17 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:04:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11574.46ms
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:05:51 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:05:51 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:05:51 [INFO] (web.py:web:2242): 200 GET /info (::1) 10.97ms
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:05:51 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:05:51 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:05:51 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:05:51 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 43.88ms
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:05:51 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:05:51 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:05:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:05:51 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:05:51 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:06:04 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12934.21ms
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:06:04 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:06:04 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:06:04 [INFO] (web.py:web:2242): 200 GET /info (::1) 10.97ms
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:06:04 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:06:04 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:06:04 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:06:04 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:06:04 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:06:04 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:06:04 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:06:04 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:06:04 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:06:18 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13793.61ms
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:00 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:00 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:07:00 [INFO] (web.py:web:2242): 200 GET /info (::1) 33.91ms
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:00 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:00 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:07:00 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:07:00 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:00 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:00 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:00 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:00 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:07:00 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:07:12 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12053.30ms
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:12 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:12 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:07:12 [INFO] (web.py:web:2242): 200 GET /info (::1) 8.98ms
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:12 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:12 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:07:12 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:07:12 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 4.99ms
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:12 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:12 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:12 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:07:12 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:07:24 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12142.23ms
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:54 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:54 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:07:54 [INFO] (web.py:web:2242): 200 GET /info (::1) 33.91ms
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:54 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:54 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:07:54 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:07:54 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:07:54 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:07:54 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:07:54 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:07:54 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:07:54 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:08:07 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12598.62ms
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:08:07 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:08:07 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:08:07 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.98ms
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:08:07 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:08:07 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:08:07 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:08:07 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:08:07 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:08:07 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:08:07 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:08:07 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:08:07 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:08:19 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12336.30ms
2020-03-04,17:10:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:10:17 [INFO] (web.py:web:2242): 200 GET /info (::1) 1264.67ms
2020-03-04,17:10:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:17 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:10:17 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:10:17 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 315.16ms
2020-03-04,17:10:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:18 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:18 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:18 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:10:18 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:10:32 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 14453.73ms
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:10:32 [INFO] (web.py:web:2242): 200 GET /info (::1) 11.97ms
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:10:32 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:10:32 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:10:32 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:10:32 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:10:32 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:10:32 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:10:32 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:10:44 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11579.53ms
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:09 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:09 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:12:09 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:09 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:09 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:12:09 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:12:09 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 28.44ms
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:09 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:09 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:09 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:09 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:12:09 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:12:21 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12572.45ms
2020-03-04,17:12:21 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:21 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:21 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:21 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:21 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:21 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:21 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:21 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:21 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:21 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:21 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:12:21 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:21 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:12:22 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.97ms
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:22 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:22 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:12:22 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:12:22 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.99ms
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:12:22 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:12:22 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:12:22 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:12:22 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:12:22 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:12:36 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 14059.45ms
2020-03-04,17:15:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:15:11 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.97ms
2020-03-04,17:15:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:11 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:15:11 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:15:11 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,17:15:12 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:12 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:12 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:12 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:12 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:12 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:12 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:15:12 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:15:25 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13193.68ms
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:15:25 [INFO] (web.py:web:2242): 200 GET /info (::1) 37.90ms
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:15:25 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:15:25 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:15:25 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:15:25 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:15:25 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:15:25 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:15:25 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:15:36 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11393.82ms
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:16:11 [INFO] (web.py:web:2242): 200 GET /info (::1) 31.43ms
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:16:11 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:16:11 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:11 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:16:11 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:16:23 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11713.44ms
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:23 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:23 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:16:23 [INFO] (web.py:web:2242): 200 GET /info (::1) 34.91ms
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:23 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:23 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:16:23 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:16:23 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:23 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:23 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:23 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:23 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:16:23 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:16:35 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12502.89ms
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:44 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:44 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:16:44 [INFO] (web.py:web:2242): 200 GET /info (::1) 44.88ms
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:44 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:44 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:16:44 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:16:44 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 9.97ms
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:44 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:44 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:44 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:44 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:16:44 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:16:55 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11523.69ms
2020-03-04,17:16:55 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:16:56 [INFO] (web.py:web:2242): 200 GET /info (::1) 16.96ms
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:16:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:16:56 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 39.89ms
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:16:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:16:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:16:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:16:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:16:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:17:08 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12522.24ms
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:17:28 [INFO] (web.py:web:2242): 200 GET /info (::1) 8.98ms
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:17:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:17:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 33.91ms
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:17:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:17:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12269.82ms
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:17:40 [INFO] (web.py:web:2242): 200 GET /info (::1) 32.91ms
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:17:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:17:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:17:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:17:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:17:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:17:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:17:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:17:52 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11682.81ms
2020-03-04,17:18:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:18:27 [INFO] (web.py:web:2242): 200 GET /info (::1) 19.95ms
2020-03-04,17:18:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:18:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:18:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 36.90ms
2020-03-04,17:18:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:18:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:18:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12644.43ms
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:18:40 [INFO] (web.py:web:2242): 200 GET /info (::1) 10.97ms
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:18:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:18:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:18:40 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:18:40 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:18:40 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:18:40 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:18:40 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:18:54 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 14179.13ms
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:06 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:06 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:24:06 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:06 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:06 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:24:06 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:24:06 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:06 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:06 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:06 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:06 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:24:06 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:24:17 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11760.33ms
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:24:17 [INFO] (web.py:web:2242): 200 GET /info (::1) 8.98ms
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:24:17 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:24:17 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:24:17 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:24:17 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:24:17 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:24:17 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:24:17 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:24:34 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 17017.49ms
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:25:11 [INFO] (web.py:web:2242): 200 GET /info (::1) 34.91ms
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:25:11 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:25:11 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:11 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:11 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:11 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:11 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None], '_arg2': [484247.49810000096, 470532.50899999985, 609205.5980000008, 733215.2551999999], '_arg3': [12, 12, 12, 12], '_arg4': [12, 12, 12, 12], '_arg5': [0, 0, 0, 0], '_arg6': [0, 0, 0, 0]}}'...
2020-03-04,17:25:11 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:25:11 [ERROR] (base_handler.py:base_handler:121): Responding with status=500, message="Error processing script", info="ValueError : Insufficient degrees of freedom to estimate"
2020-03-04,17:25:11 [ERROR] (web.py:web:2242): 500 POST /evaluate (::1) 39.89ms
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:18 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:18 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:25:18 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:18 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:18 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:25:18 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:25:18 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.98ms
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:18 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:18 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:18 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:18 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:25:18 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:25:29 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11501.51ms
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:29 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:29 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:25:29 [INFO] (web.py:web:2242): 200 GET /info (::1) 36.90ms
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:29 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:29 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:25:29 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:25:29 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 9.97ms
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:29 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:29 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:29 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:25:29 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:25:42 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12978.48ms
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:25:50 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:25:50 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:25:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:25:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:25:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:25:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:25:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:25:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:25:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:51 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:25:51 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:25:51 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:25:51 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:26:03 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12087.13ms
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:03 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:03 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:26:03 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:03 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:03 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:26:03 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:26:03 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.97ms
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:03 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:03 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:03 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:03 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:26:03 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:26:15 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12657.76ms
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:26:43 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:26:43 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:26:43 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.00ms
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:43 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:43 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:43 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:43 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:26:43 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:26:56 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13300.80ms
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:26:56 [INFO] (web.py:web:2242): 200 GET /info (::1) 8.98ms
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:26:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:26:56 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.97ms
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:26:56 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:26:56 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:26:56 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:26:56 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:26:56 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:27:08 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11621.62ms
2020-03-04,17:27:29 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:29 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:29 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:29 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:29 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:29 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:27:29 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:29 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:27:29 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:27:30 [INFO] (web.py:web:2242): 200 GET /info (::1) 36.92ms
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:30 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:30 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:27:30 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:27:30 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.98ms
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:30 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:30 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:30 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:30 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:27:30 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:27:41 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11542.22ms
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:41 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:41 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:27:41 [INFO] (web.py:web:2242): 200 GET /info (::1) 16.96ms
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:41 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:41 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:27:41 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:27:41 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 13.96ms
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:41 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:41 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:41 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:41 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:27:41 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:27:54 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12564.30ms
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:27:59 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.98ms
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:27:59 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:27:59 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 34.91ms
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:27:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:27:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:27:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:27:59 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:27:59 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:28:10 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11572.77ms
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:28:10 [INFO] (web.py:web:2242): 200 GET /info (::1) 10.97ms
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:28:10 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:28:10 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.98ms
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:10 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:10 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:10 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:10 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:28:10 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:28:22 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11834.62ms
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:28:27 [INFO] (web.py:web:2242): 200 GET /info (::1) 49.87ms
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:28:27 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:28:27 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 22.94ms
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:27 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:28:27 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:28:40 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12694.66ms
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:47 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:47 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:28:47 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.99ms
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:47 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:47 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:28:47 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:28:47 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:47 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:47 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:47 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:47 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:28:47 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:28:59 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11956.47ms
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:28:59 [INFO] (web.py:web:2242): 200 GET /info (::1) 25.93ms
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:28:59 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:28:59 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 8.98ms
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:28:59 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:28:59 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:28:59 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:28:59 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:28:59 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:29:11 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12441.00ms
2020-03-04,17:29:19 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:19 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:19 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:19 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:29:19 [INFO] (web.py:web:2242): 200 GET /info (::1) 31.91ms
2020-03-04,17:29:19 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:19 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:19 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:19 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:19 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:19 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:29:19 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:29:19 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:29:20 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:20 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:20 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:20 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:20 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:20 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:20 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:29:20 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:29:31 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11288.35ms
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:29:45 [INFO] (web.py:web:2242): 200 GET /info (::1) 33.91ms
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:29:45 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:29:45 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 9.97ms
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:29:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:29:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:29:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:29:45 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:29:45 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:29:57 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12092.28ms
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:36:45 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:36:45 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:36:45 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.99ms
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:45 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:45 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:45 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:45 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:36:45 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:36:57 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12002.66ms
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:57 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:57 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:36:57 [INFO] (web.py:web:2242): 200 GET /info (::1) 13.97ms
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:57 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:57 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:36:57 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:36:57 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:36:57 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:36:57 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:36:57 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:36:57 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:36:57 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:37:10 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12448.04ms
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:37 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:37 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:38:37 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:37 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:37 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:38:37 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:38:37 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 6.98ms
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:37 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:37 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:37 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:37 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:38:37 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:38:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12459.40ms
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:38:50 [INFO] (web.py:web:2242): 200 GET /info (::1) 9.98ms
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:38:50 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:38:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 35.90ms
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:38:50 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:38:50 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:38:50 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:38:50 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:38:50 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:39:02 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12182.80ms
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:15 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:15 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:39:15 [INFO] (web.py:web:2242): 200 GET /info (::1) 17.95ms
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:15 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:15 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:39:15 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:39:15 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 10.97ms
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:15 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:15 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:15 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:15 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:39:15 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:39:27 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12370.33ms
2020-03-04,17:39:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:39:27 [INFO] (web.py:web:2242): 200 GET /info (::1) 6.99ms
2020-03-04,17:39:27 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:27 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:27 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:27 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:27 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:27 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:39:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:39:28 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 28.92ms
2020-03-04,17:39:28 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:39:28 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:39:28 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:39:28 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:39:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:39:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:39:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:28 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:39:28 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:39:28 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:39:28 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:39:39 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11028.17ms
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:24 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:24 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:43:24 [INFO] (web.py:web:2242): 200 GET /info (::1) 5.98ms
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:24 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:24 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:43:24 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:43:24 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 5.98ms
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:24 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:24 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:24 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:24 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:43:24 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:43:35 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 11406.66ms
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:43:35 [INFO] (web.py:web:2242): 200 GET /info (::1) 12.97ms
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:43:35 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:43:35 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 12.96ms
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:43:35 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:43:35 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:43:35 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:43:35 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], '_arg2': [14236.894999999997, 4519.892000000001, 55691.00900000003, 28295.344999999994, 23648.287000000004, 34595.127600000036, 33946.393, 27909.46849999999, 81777.35079999997, 31453.39299999999, 78628.71669999999, 69545.62049999999, 18174.075599999993, 11951.411, 38726.25199999999, 34195.20849999999, 30131.686499999996, 24797.292, 28765.324999999993, 36898.33219999999, 64595.91800000004, 31404.92350000001, 75972.56350000005, 74919.52120000008, 18542.490999999995, 22978.815000000002, 51715.87500000002, 38750.03899999997, 56987.72799999999, 40344.533999999985, 39261.962999999974, 31115.3743, 73410.02489999997, 59687.74500000002, 79411.96579999999, 96999.04300000002, 43971.373999999996, 20301.13339999999, 58872.352799999986, 36521.536100000005, 44261.110199999996, 52981.725699999995, 45264.416000000005, 63120.88799999998, 87866.65200000003, 77776.92319999998, 118447.82500000003, 83829.3188], '_arg3': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg4': [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], '_arg5': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], '_arg6': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}}'...
2020-03-04,17:43:35 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:43:50 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 14491.25ms
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:44:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:44:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Description' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Creation Time' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value '0'
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Name' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value 'TabPy Server'
2020-03-04,17:44:16 [INFO] (web.py:web:2242): 200 GET /info (::1) 7.98ms
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:44:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:44:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': 'return int(1)', 'data': {'_arg1': [4]}}'...
2020-03-04,17:44:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1):
 return int(1)

2020-03-04,17:44:16 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 7.98ms
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Checking if need to handle authentication
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Handling authentication
2020-03-04,17:44:16 [INFO] (base_handler.py:base_handler:121): Authentication is not a required feature for API "v1"
2020-03-04,17:44:16 [DEBUG] (state.py:state:492): Collecting Access-Control-Allow-Origin from state file ...
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Origin' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Headers' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (state.py:state:594): Loading option 'Access-Control-Allow-Methods' from section [Service Info]...
2020-03-04,17:44:16 [DEBUG] (state.py:state:616): Returning value ''
2020-03-04,17:44:16 [DEBUG] (base_handler.py:base_handler:121): Processing POST request '{'script': "\nimport statsmodels.api as sm\n\nimport pandas as pd\nimport numpy as np\nimport scipy.stats as scs\nfrom datetime import datetime\ndf = pd.DataFrame({'Month':_arg1, 'milk':_arg2})\ndf['milk'] = df['milk'].astype('float64')\ndf['Month'] = pd.to_datetime(_arg2)\ndf = df[['Month','milk']].set_index('Month')\ndf = df.fillna(0)\n\n\nmodel=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))\nresults=model.fit()\nfitted_vals = list(results.fittedvalues.values)\n\nreturn(fitted_vals)\n", 'data': {'_arg1': ['2015-01-03', '2015-01-04', '2015-01-05', '2015-01-06', '2015-01-07', '2015-01-09', '2015-01-10', '2015-01-11', '2015-01-13', '2015-01-14', '2015-01-15', '2015-01-16', '2015-01-18', '2015-01-19', '2015-01-20', '2015-01-21', '2015-01-23', '2015-01-26', '2015-01-27', '2015-01-28', '2015-01-30', '2015-01-31', '2015-02-01', '2015-02-02', '2015-02-03', '2015-02-04', '2015-02-06', '2015-02-07', '2015-02-08', '2015-02-11', '2015-02-12', '2015-02-14', '2015-02-15', '2015-02-16', '2015-02-17', '2015-02-18', '2015-02-20', '2015-02-21', '2015-02-22', '2015-02-23', '2015-02-24', '2015-02-27', '2015-03-01', '2015-03-02', '2015-03-03', '2015-03-04', '2015-03-05', '2015-03-07', '2015-03-10', '2015-03-11', '2015-03-14', '2015-03-15', '2015-03-16', '2015-03-17', '2015-03-18', '2015-03-19', '2015-03-21', '2015-03-22', '2015-03-23', '2015-03-24', '2015-03-25', '2015-03-26', '2015-03-28', '2015-03-29', '2015-03-30', '2015-03-31', '2015-04-01', '2015-04-02', '2015-04-03', '2015-04-04', '2015-04-05', '2015-04-06', '2015-04-07', '2015-04-08', '2015-04-11', '2015-04-12', '2015-04-13', '2015-04-15', '2015-04-16', '2015-04-18', '2015-04-19', '2015-04-20', '2015-04-21', '2015-04-22', '2015-04-23', '2015-04-25', '2015-04-26', '2015-04-28', '2015-04-29', '2015-04-30', '2015-05-02', '2015-05-03', '2015-05-04', '2015-05-05', '2015-05-06', '2015-05-07', '2015-05-08', '2015-05-09', '2015-05-10', '2015-05-11', '2015-05-12', '2015-05-13', '2015-05-14', '2015-05-16', '2015-05-17', '2015-05-18', '2015-05-19', '2015-05-20', '2015-05-21', '2015-05-22', '2015-05-23', '2015-05-24', '2015-05-25', '2015-05-26', '2015-05-27', '2015-05-28', '2015-05-30', '2015-05-31', '2015-06-01', '2015-06-02', '2015-06-03', '2015-06-04', '2015-06-06', '2015-06-07', '2015-06-08', '2015-06-09', '2015-06-10', '2015-06-13', '2015-06-14', '2015-06-15', '2015-06-16', '2015-06-17', '2015-06-18', '2015-06-20', '2015-06-21', '2015-06-22', '2015-06-23', '2015-06-24', '2015-06-25', '2015-06-27', '2015-06-28', '2015-06-29', '2015-06-30', '2015-07-01', '2015-07-02', '2015-07-04', '2015-07-05', '2015-07-06', '2015-07-07', '2015-07-08', '2015-07-09', '2015-07-11', '2015-07-12', '2015-07-13', '2015-07-14', '2015-07-15', '2015-07-18', '2015-07-19', '2015-07-20', '2015-07-21', '2015-07-22', '2015-07-23', '2015-07-25', '2015-07-26', '2015-07-27', '2015-07-28', '2015-07-30', '2015-08-01', '2015-08-02', '2015-08-03', '2015-08-04', '2015-08-05', '2015-08-06', '2015-08-08', '2015-08-09', '2015-08-11', '2015-08-12', '2015-08-15', '2015-08-16', '2015-08-17', '2015-08-19', '2015-08-20', '2015-08-22', '2015-08-23', '2015-08-24', '2015-08-25', '2015-08-26', '2015-08-27', '2015-08-29', '2015-08-30', '2015-08-31', '2015-09-01', '2015-09-02', '2015-09-03', '2015-09-05', '2015-09-06', '2015-09-07', '2015-09-08', '2015-09-09', '2015-09-10', '2015-09-11', '2015-09-12', '2015-09-13', '2015-09-14', '2015-09-15', '2015-09-16', '2015-09-17', '2015-09-19', '2015-09-20', '2015-09-21', '2015-09-22', '2015-09-23', '2015-09-24', '2015-09-25', '2015-09-26', '2015-09-27', '2015-09-28', '2015-09-29', '2015-09-30', '2015-10-01', '2015-10-02', '2015-10-03', '2015-10-04', '2015-10-05', '2015-10-06', '2015-10-07', '2015-10-08', '2015-10-09', '2015-10-10', '2015-10-11', '2015-10-12', '2015-10-13', '2015-10-14', '2015-10-15', '2015-10-16', '2015-10-17', '2015-10-18', '2015-10-19', '2015-10-20', '2015-10-21', '2015-10-22', '2015-10-24', '2015-10-25', '2015-10-26', '2015-10-27', '2015-10-28', '2015-10-29', '2015-10-31', '2015-11-01', '2015-11-02', '2015-11-03', '2015-11-04', '2015-11-05', '2015-11-06', '2015-11-07', '2015-11-08', '2015-11-09', '2015-11-10', '2015-11-11', '2015-11-12', '2015-11-14', '2015-11-15', '2015-11-16', '2015-11-17', '2015-11-18', '2015-11-19', '2015-11-20', '2015-11-21', '2015-11-22', '2015-11-23', '2015-11-24', '2015-11-25', '2015-11-26', '2015-11-27', '2015-11-28', '2015-11-29', '2015-11-30', '2015-12-01', '2015-12-02', '2015-12-03', '2015-12-04', '2015-12-05', '2015-12-06', '2015-12-07', '2015-12-08', '2015-12-09', '2015-12-10', '2015-12-12', '2015-12-13', '2015-12-14', '2015-12-15', '2015-12-16', '2015-12-17', '2015-12-19', '2015-12-20', '2015-12-21', '2015-12-22', '2015-12-23', '2015-12-24', '2015-12-26', '2015-12-27', '2015-12-28', '2015-12-29', '2015-12-30', '2015-12-31', '2016-01-02', '2016-01-03', '2016-01-04', '2016-01-05', '2016-01-06', '2016-01-09', '2016-01-10', '2016-01-12', '2016-01-13', '2016-01-17', '2016-01-19', '2016-01-23', '2016-01-24', '2016-01-26', '2016-01-27', '2016-01-28', '2016-01-30', '2016-01-31', '2016-02-03', '2016-02-06', '2016-02-07', '2016-02-08', '2016-02-09', '2016-02-10', '2016-02-14', '2016-02-15', '2016-02-16', '2016-02-18', '2016-02-20', '2016-02-21', '2016-02-22', '2016-02-23', '2016-02-25', '2016-02-27', '2016-02-28', '2016-03-01', '2016-03-02', '2016-03-05', '2016-03-06', '2016-03-07', '2016-03-08', '2016-03-09', '2016-03-10', '2016-03-12', '2016-03-13', '2016-03-14', '2016-03-15', '2016-03-16', '2016-03-17', '2016-03-19', '2016-03-20', '2016-03-21', '2016-03-22', '2016-03-23', '2016-03-24', '2016-03-26', '2016-03-27', '2016-03-28', '2016-03-29', '2016-03-30', '2016-03-31', '2016-04-02', '2016-04-04', '2016-04-05', '2016-04-06', '2016-04-07', '2016-04-09', '2016-04-10', '2016-04-11', '2016-04-12', '2016-04-13', '2016-04-14', '2016-04-16', '2016-04-17', '2016-04-18', '2016-04-19', '2016-04-20', '2016-04-21', '2016-04-22', '2016-04-24', '2016-04-25', '2016-04-26', '2016-04-27', '2016-04-28', '2016-04-29', '2016-04-30', '2016-05-01', '2016-05-02', '2016-05-03', '2016-05-04', '2016-05-07', '2016-05-08', '2016-05-09', '2016-05-10', '2016-05-11', '2016-05-12', '2016-05-13', '2016-05-14', '2016-05-15', '2016-05-16', '2016-05-17', '2016-05-18', '2016-05-20', '2016-05-21', '2016-05-22', '2016-05-23', '2016-05-24', '2016-05-25', '2016-05-26', '2016-05-28', '2016-05-29', '2016-05-30', '2016-05-31', '2016-06-01', '2016-06-04', '2016-06-05', '2016-06-07', '2016-06-08', '2016-06-09', '2016-06-11', '2016-06-12', '2016-06-13', '2016-06-14', '2016-06-15', '2016-06-16', '2016-06-18', '2016-06-19', '2016-06-20', '2016-06-21', '2016-06-22', '2016-06-23', '2016-06-25', '2016-06-26', '2016-06-28', '2016-06-29', '2016-07-02', '2016-07-03', '2016-07-04', '2016-07-05', '2016-07-06', '2016-07-08', '2016-07-09', '2016-07-10', '2016-07-11', '2016-07-12', '2016-07-13', '2016-07-14', '2016-07-16', '2016-07-17', '2016-07-18', '2016-07-19', '2016-07-20', '2016-07-23', '2016-07-24', '2016-07-25', '2016-07-26', '2016-07-27', '2016-07-30', '2016-07-31', '2016-08-01', '2016-08-02', '2016-08-05', '2016-08-06', '2016-08-07', '2016-08-08', '2016-08-09', '2016-08-10', '2016-08-11', '2016-08-13', '2016-08-15', '2016-08-16', '2016-08-17', '2016-08-21', '2016-08-22', '2016-08-23', '2016-08-24', '2016-08-25', '2016-08-27', '2016-08-28', '2016-08-29', '2016-08-31', '2016-09-01', '2016-09-03', '2016-09-04', '2016-09-05', '2016-09-06', '2016-09-07', '2016-09-08', '2016-09-10', '2016-09-11', '2016-09-12', '2016-09-13', '2016-09-14', '2016-09-15', '2016-09-16', '2016-09-17', '2016-09-18', '2016-09-19', '2016-09-20', '2016-09-21', '2016-09-22', '2016-09-24', '2016-09-25', '2016-09-26', '2016-09-27', '2016-09-28', '2016-10-01', '2016-10-02', '2016-10-03', '2016-10-04', '2016-10-05', '2016-10-08', '2016-10-09', '2016-10-10', '2016-10-11', '2016-10-12', '2016-10-13', '2016-10-15', '2016-10-16', '2016-10-17', '2016-10-18', '2016-10-19', '2016-10-20', '2016-10-22', '2016-10-23', '2016-10-24', '2016-10-25', '2016-10-26', '2016-10-28', '2016-10-29', '2016-10-30', '2016-10-31', '2016-11-01', '2016-11-02', '2016-11-03', '2016-11-05', '2016-11-06', '2016-11-07', '2016-11-08', '2016-11-09', '2016-11-10', '2016-11-11', '2016-11-12', '2016-11-13', '2016-11-14', '2016-11-15', '2016-11-16', '2016-11-17', '2016-11-19', '2016-11-20', '2016-11-21', '2016-11-22', '2016-11-23', '2016-11-24', '2016-11-25', '2016-11-26', '2016-11-27', '2016-11-28', '2016-11-29', '2016-11-30', '2016-12-01', '2016-12-03', '2016-12-04', '2016-12-05', '2016-12-06', '2016-12-07', '2016-12-08', '2016-12-09', '2016-12-10', '2016-12-11', '2016-12-12', '2016-12-13', '2016-12-14', '2016-12-15', '2016-12-16', '2016-12-17', '2016-12-18', '2016-12-19', '2016-12-20', '2016-12-21', '2016-12-22', '2016-12-23', '2016-12-24', '2016-12-25', '2016-12-26', '2016-12-27', '2016-12-28', '2016-12-29', '2016-12-30', '2016-12-31', '2017-01-02', '2017-01-03', '2017-01-04', '2017-01-05', '2017-01-07', '2017-01-08', '2017-01-09', '2017-01-10', '2017-01-11', '2017-01-14', '2017-01-15', '2017-01-16', '2017-01-17', '2017-01-21', '2017-01-22', '2017-01-23', '2017-01-24', '2017-01-25', '2017-01-28', '2017-01-30', '2017-01-31', '2017-02-01', '2017-02-02', '2017-02-03', '2017-02-04', '2017-02-05', '2017-02-06', '2017-02-07', '2017-02-08', '2017-02-09', '2017-02-11', '2017-02-12', '2017-02-13', '2017-02-14', '2017-02-15', '2017-02-16', '2017-02-19', '2017-02-20', '2017-02-21', '2017-02-22', '2017-02-23', '2017-02-25', '2017-02-27', '2017-02-28', '2017-03-01', '2017-03-03', '2017-03-04', '2017-03-05', '2017-03-06', '2017-03-07', '2017-03-08', '2017-03-09', '2017-03-10', '2017-03-11', '2017-03-12', '2017-03-13', '2017-03-14', '2017-03-15', '2017-03-17', '2017-03-18', '2017-03-19', '2017-03-20', '2017-03-21', '2017-03-22', '2017-03-24', '2017-03-25', '2017-03-26', '2017-03-27', '2017-03-28', '2017-03-29', '2017-03-30', '2017-03-31', '2017-04-01', '2017-04-02', '2017-04-03', '2017-04-04', '2017-04-05', '2017-04-06', '2017-04-07', '2017-04-08', '2017-04-09', '2017-04-10', '2017-04-12', '2017-04-13', '2017-04-14', '2017-04-15', '2017-04-16', '2017-04-17', '2017-04-18', '2017-04-19', '2017-04-21', '2017-04-22', '2017-04-23', '2017-04-24', '2017-04-25', '2017-04-26', '2017-04-28', '2017-04-30', '2017-05-01', '2017-05-02', '2017-05-03', '2017-05-05', '2017-05-06', '2017-05-07', '2017-05-08', '2017-05-09', '2017-05-10', '2017-05-11', '2017-05-12', '2017-05-14', '2017-05-15', '2017-05-16', '2017-05-17', '2017-05-18', '2017-05-19', '2017-05-20', '2017-05-21', '2017-05-22', '2017-05-23', '2017-05-24', '2017-05-25', '2017-05-26', '2017-05-27', '2017-05-28', '2017-05-29', '2017-05-30', '2017-05-31', '2017-06-02', '2017-06-03', '2017-06-04', '2017-06-05', '2017-06-06', '2017-06-07', '2017-06-09', '2017-06-10', '2017-06-11', '2017-06-12', '2017-06-13', '2017-06-14', '2017-06-15', '2017-06-16', '2017-06-17', '2017-06-18', '2017-06-19', '2017-06-20', '2017-06-21', '2017-06-23', '2017-06-24', '2017-06-25', '2017-06-26', '2017-06-27', '2017-06-28', '2017-06-29', '2017-06-30', '2017-07-01', '2017-07-02', '2017-07-03', '2017-07-04', '2017-07-07', '2017-07-08', '2017-07-09', '2017-07-10', '2017-07-12', '2017-07-14', '2017-07-15', '2017-07-16', '2017-07-17', '2017-07-18', '2017-07-19', '2017-07-20', '2017-07-21', '2017-07-22', '2017-07-23', '2017-07-24', '2017-07-25', '2017-07-28', '2017-07-29', '2017-07-30', '2017-07-31', '2017-08-01', '2017-08-02', '2017-08-03', '2017-08-04', '2017-08-05', '2017-08-06', '2017-08-07', '2017-08-08', '2017-08-09', '2017-08-11', '2017-08-12', '2017-08-13', '2017-08-14', '2017-08-15', '2017-08-16', '2017-08-17', '2017-08-18', '2017-08-19', '2017-08-20', '2017-08-21', '2017-08-22', '2017-08-23', '2017-08-26', '2017-08-27', '2017-08-28', '2017-08-29', '2017-08-30', '2017-08-31', '2017-09-01', '2017-09-02', '2017-09-03', '2017-09-04', '2017-09-05', '2017-09-06', '2017-09-08', '2017-09-09', '2017-09-10', '2017-09-11', '2017-09-12', '2017-09-13', '2017-09-14', '2017-09-15', '2017-09-16', '2017-09-17', '2017-09-18', '2017-09-19', '2017-09-20', '2017-09-22', '2017-09-23', '2017-09-24', '2017-09-25', '2017-09-26', '2017-09-27', '2017-09-28', '2017-09-29', '2017-09-30', '2017-10-01', '2017-10-02', '2017-10-03', '2017-10-04', '2017-10-06', '2017-10-07', '2017-10-08', '2017-10-09', '2017-10-10', '2017-10-11', '2017-10-13', '2017-10-14', '2017-10-15', '2017-10-16', '2017-10-17', '2017-10-18', '2017-10-20', '2017-10-21', '2017-10-22', '2017-10-23', '2017-10-24', '2017-10-25', '2017-10-27', '2017-10-28', '2017-10-29', '2017-10-30', '2017-10-31', '2017-11-01', '2017-11-03', '2017-11-04', '2017-11-05', '2017-11-06', '2017-11-07', '2017-11-08', '2017-11-09', '2017-11-10', '2017-11-11', '2017-11-12', '2017-11-13', '2017-11-14', '2017-11-15', '2017-11-16', '2017-11-17', '2017-11-18', '2017-11-19', '2017-11-20', '2017-11-21', '2017-11-22', '2017-11-23', '2017-11-24', '2017-11-25', '2017-11-26', '2017-11-27', '2017-11-28', '2017-11-29', '2017-11-30', '2017-12-01', '2017-12-02', '2017-12-03', '2017-12-04', '2017-12-05', '2017-12-06', '2017-12-08', '2017-12-09', '2017-12-10', '2017-12-11', '2017-12-12', '2017-12-13', '2017-12-14', '2017-12-15', '2017-12-16', '2017-12-17', '2017-12-18', '2017-12-19', '2017-12-20', '2017-12-22', '2017-12-23', '2017-12-24', '2017-12-25', '2017-12-26', '2017-12-27', '2017-12-29', '2017-12-30', '2017-12-31', '2018-01-01', '2018-01-02', '2018-01-03', '2018-01-06', '2018-01-07', '2018-01-08', '2018-01-09', '2018-01-12', '2018-01-13', '2018-01-14', '2018-01-15', '2018-01-16', '2018-01-19', '2018-01-20', '2018-01-21', '2018-01-22', '2018-01-23', '2018-01-24', '2018-01-26', '2018-01-27', '2018-01-28', '2018-01-29', '2018-01-30', '2018-02-02', '2018-02-03', '2018-02-04', '2018-02-05', '2018-02-06', '2018-02-09', '2018-02-10', '2018-02-11', '2018-02-13', '2018-02-16', '2018-02-17', '2018-02-18', '2018-02-19', '2018-02-20', '2018-02-21', '2018-02-23', '2018-02-24', '2018-02-25', '2018-02-26', '2018-02-28', '2018-03-02', '2018-03-03', '2018-03-04', '2018-03-05', '2018-03-06', '2018-03-07', '2018-03-08', '2018-03-09', '2018-03-10', '2018-03-11', '2018-03-12', '2018-03-13', '2018-03-14', '2018-03-16', '2018-03-17', '2018-03-18', '2018-03-19', '2018-03-20', '2018-03-21', '2018-03-23', '2018-03-24', '2018-03-25', '2018-03-26', '2018-03-27', '2018-03-28', '2018-03-29', '2018-03-30', '2018-03-31', '2018-04-01', '2018-04-02', '2018-04-03', '2018-04-04', '2018-04-06', '2018-04-07', '2018-04-08', '2018-04-09', '2018-04-10', '2018-04-11', '2018-04-12', '2018-04-13', '2018-04-14', '2018-04-15', '2018-04-16', '2018-04-17', '2018-04-20', '2018-04-21', '2018-04-22', '2018-04-23', '2018-04-24', '2018-04-25', '2018-04-26', '2018-04-27', '2018-04-28', '2018-04-29', '2018-04-30', '2018-05-01', '2018-05-02', '2018-05-03', '2018-05-04', '2018-05-05', '2018-05-06', '2018-05-07', '2018-05-08', '2018-05-09', '2018-05-11', '2018-05-12', '2018-05-13', '2018-05-14', '2018-05-15', '2018-05-16', '2018-05-18', '2018-05-19', '2018-05-20', '2018-05-21', '2018-05-22', '2018-05-23', '2018-05-25', '2018-05-26', '2018-05-27', '2018-05-28', '2018-05-29', '2018-05-30', '2018-06-01', '2018-06-02', '2018-06-03', '2018-06-04', '2018-06-05', '2018-06-06', '2018-06-08', '2018-06-09', '2018-06-10', '2018-06-11', '2018-06-12', '2018-06-13', '2018-06-15', '2018-06-16', '2018-06-17', '2018-06-18', '2018-06-19', '2018-06-20', '2018-06-21', '2018-06-22', '2018-06-24', '2018-06-25', '2018-06-26', '2018-06-27', '2018-06-29', '2018-06-30', '2018-07-01', '2018-07-02', '2018-07-03', '2018-07-05', '2018-07-06', '2018-07-07', '2018-07-08', '2018-07-09', '2018-07-10', '2018-07-11', '2018-07-12', '2018-07-13', '2018-07-14', '2018-07-15', '2018-07-16', '2018-07-17', '2018-07-18', '2018-07-20', '2018-07-21', '2018-07-22', '2018-07-23', '2018-07-24', '2018-07-25', '2018-07-26', '2018-07-27', '2018-07-28', '2018-07-29', '2018-07-30', '2018-07-31', '2018-08-01', '2018-08-03', '2018-08-04', '2018-08-05', '2018-08-06', '2018-08-07', '2018-08-10', '2018-08-11', '2018-08-12', '2018-08-13', '2018-08-14', '2018-08-15', '2018-08-16', '2018-08-17', '2018-08-18', '2018-08-19', '2018-08-20', '2018-08-21', '2018-08-22', '2018-08-23', '2018-08-24', '2018-08-25', '2018-08-26', '2018-08-27', '2018-08-28', '2018-08-29', '2018-08-31', '2018-09-01', '2018-09-02', '2018-09-03', '2018-09-04', '2018-09-05', '2018-09-07', '2018-09-08', '2018-09-09', '2018-09-10', '2018-09-11', '2018-09-12', '2018-09-13', '2018-09-14', '2018-09-15', '2018-09-16', '2018-09-17', '2018-09-18', '2018-09-19', '2018-09-20', '2018-09-21', '2018-09-22', '2018-09-23', '2018-09-24', '2018-09-25', '2018-09-26', '2018-09-28', '2018-09-29', '2018-09-30', '2018-10-01', '2018-10-02', '2018-10-03', '2018-10-04', '2018-10-05', '2018-10-06', '2018-10-07', '2018-10-08', '2018-10-09', '2018-10-10', '2018-10-12', '2018-10-13', '2018-10-14', '2018-10-15', '2018-10-16', '2018-10-17', '2018-10-19', '2018-10-20', '2018-10-21', '2018-10-22', '2018-10-23', '2018-10-24', '2018-10-26', '2018-10-27', '2018-10-28', '2018-10-29', '2018-10-30', '2018-10-31', '2018-11-01', '2018-11-02', '2018-11-03', '2018-11-04', '2018-11-05', '2018-11-06', '2018-11-07', '2018-11-08', '2018-11-09', '2018-11-10', '2018-11-11', '2018-11-12', '2018-11-13', '2018-11-14', '2018-11-15', '2018-11-16', '2018-11-17', '2018-11-18', '2018-11-19', '2018-11-20', '2018-11-21', '2018-11-22', '2018-11-23', '2018-11-24', '2018-11-25', '2018-11-26', '2018-11-27', '2018-11-28', '2018-11-29', '2018-11-30', '2018-12-01', '2018-12-02', '2018-12-03', '2018-12-04', '2018-12-05', '2018-12-06', '2018-12-07', '2018-12-08', '2018-12-09', '2018-12-10', '2018-12-11', '2018-12-13', '2018-12-14', '2018-12-15', '2018-12-16', '2018-12-17', '2018-12-18', '2018-12-19', '2018-12-20', '2018-12-21', '2018-12-22', '2018-12-23', '2018-12-24', '2018-12-25', '2018-12-26', '2018-12-27', '2018-12-28', '2018-12-29', '2018-12-30'], '_arg2': [16.448, 288.06, 19.536, 4407.1, 87.158, 40.544000000000004, 54.83, 9.94, 3553.795, 61.96, 149.95, 299.964, 64.864, 378.59400000000005, 2673.87, 25.248, 46.019999999999996, 1097.25, 426.67, 3.9280000000000004, 240.5, 290.666, 468.90000000000003, 211.64600000000002, 97.11200000000001, 134.384, 330.512, 180.32, 14.56, 2043.4000000000005, 129.568, 576.7259999999999, 21.36, 9.039999999999997, 54.208, 37.784, 95.59, 8.849999999999998, 19.44, 11.364, 55.672000000000004, 19.456000000000003, 2203.151, 202.38400000000001, 1345.892, 370.45200000000006, 705.5619999999999, 1561.0620000000001, 741.9560000000001, 918.3140000000001, 2108.5499999999997, 370.78200000000004, 471.92, 3960.358, 28106.715999999997, 590.7620000000002, 4109.816000000001, 464.09299999999996, 945.064, 65.38, 459.146, 145.13000000000002, 1823.8039999999999, 890.8409999999999, 1170.322, 1959.552, 119.88799999999999, 1458.5580000000002, 233.45, 475.84399999999994, 5295.097999999998, 1650.6899999999998, 1021.1700000000001, 1958.75, 1915.24, 1912.1230000000003, 638.5760000000001, 294.71999999999997, 39.072, 1020.5319999999999, 205.47, 1250.45, 845.3599999999999, 257.752, 643.9799999999999, 2379.9939999999997, 282.56800000000004, 2578.476, 768.844, 1048.74, 506.12000000000006, 72.632, 187.432, 260.977, 254.456, 1091.35, 1799.9699999999998, 394.47999999999996, 2343.7990000000004, 1642.8019999999997, 734.846, 898.3820000000001, 310.88000000000005, 289.28, 91.67999999999999, 948.9480000000001, 91.62, 320.104, 4264.328000000001, 180.93, 323.75800000000004, 116.28, 119.53999999999999, 1325.718, 2157.394, 221.96800000000002, 1924.9130000000002, 773.7, 5188.520000000001, 738.598, 741.336, 456.272, 1374.001, 281.397, 2501.264, 5463.008000000001, 491.55, 14.52, 212.94, 942.9739999999999, 763.792, 3418.5020000000004, 139.8, 1828.9496000000001, 4107.442999999999, 1975.498, 109.496, 4.272, 792.76, 616.14, 1645.791, 46.67999999999999, 739.624, 601.0239999999999, 79.56, 247.40800000000002, 1444.1039999999998, 1038.4720000000002, 241.194, 763.0740000000001, 265.52099999999996, 2187.206, 1960.0119999999997, 351.216, 292.594, 9.510000000000002, 273.04, 461.326, 2285.7859999999996, 1961.4820000000002, 1348.3440000000003, 2613.184, 8341.289999999999, 5039.994, 580.06, 193.152, 1367.84, 228.32800000000003, 886.28, 477.994, 2743.1540000000005, 2408.7239999999997, 262.89, 3955.6290000000004, 3605.685, 451.62, 1832.38, 842.7819999999999, 853.0919999999999, 500.342, 1439.1059999999998, 1838.722, 23.104, 565.224, 59.739999999999995, 1451.6500000000003, 366.81000000000006, 2070.13, 832.3225000000001, 121.24, 92.52, 469.43600000000004, 3254.15, 22.08, 296.304, 100.36, 3523.875, 14228.427999999994, 4043.5880000000006, 1855.228, 127.94999999999999, 4904.66, 1275.4080000000001, 5023.715999999999, 133.43599999999998, 33.552, 820.5229999999998, 9338.637, 5335.968, 2679.6519999999996, 1240.266, 10662.337000000001, 211.96, 354.8888, 1480.6140000000003, 773.4399999999999, 490.29200000000003, 8109.07, 987.5320000000002, 4.71, 598.144, 862.6830000000001, 728.748, 191.9, 494.71, 237.35999999999999, 147.392, 249.36, 2049.386, 1381.1640000000002, 58.53, 2212.182, 4525.4839999999995, 206.72399999999996, 194.322, 136.068, 3134.916, 641.104, 1501.104, 1356.602, 223.808, 56.49, 103.882, 447.88000000000005, 22.320000000000004, 1510.582, 2813.8120000000004, 5362.026, 4732.079999999998, 2126.37, 2784.163, 6693.747999999999, 1694.564, 43.68, 1449.1420000000003, 333.576, 1574.094, 2002.556, 8114.548, 1054.7612000000001, 1034.73, 1780.8220000000003, 1355.9285, 11544.274000000001, 3406.8550000000005, 7226.086, 907.5600000000001, 1249.6219999999998, 1103.298, 1363.2800000000002, 5578.606, 4415.694999999999, 1705.99, 203.65999999999997, 2280.83, 649.0439999999999, 219.154, 5624.3899999999985, 1771.8079999999998, 505.88, 129.98, 2963.642, 1970.978, 548.4, 1095.12, 1522.6519999999998, 573.336, 4938.4045, 293.152, 7641.658, 1264.466, 4394.187000000001, 45.534, 3436.76, 6962.44, 1933.44, 798.9680000000001, 942.1080000000002, 1950.202, 2041.4139999999998, 2966.3880000000004, 3732.2960000000003, 2072.096, 2172.6510000000003, 5253.27, 1932.096, 1768.2215999999999, 264.46000000000004, 295.27200000000005, 31.538000000000004, 364.07, 1018.1039999999999, 854.614, 622.278, 350.384, 301.742, 43.66, 13.120000000000001, 182.72, 3573.252, 4297.644, 2161.6400000000003, 99.26000000000002, 492.83599999999996, 2432.5440000000003, 324.10999999999996, 129.09199999999998, 785.552, 77.24000000000001, 1079.962, 1602.38, 160.43, 105.844, 316.78, 2591.1, 79.36, 37.776, 25.869999999999997, 1159.271, 551.264, 1642.1743999999999, 899.5699999999999, 1969.2669999999998, 1555.2440000000001, 807.5400000000001, 2563.296, 478.008, 90.932, 51.016000000000005, 1384.856, 707.9, 16.776000000000003, 7230.21, 48.84, 5652.9396, 1548.1940000000002, 1270.379, 2481.424, 633.3019999999999, 412.94999999999993, 4623.37, 83.69999999999999, 243.344, 1559.0800000000002, 571.2239999999999, 200.716, 299.22, 1484.598, 2974.0580000000004, 140.00400000000002, 907.4359999999998, 757.992, 169.54199999999997, 1328.3460000000002, 40.74, 3192.6780000000003, 35.208, 4161.972, 2745.1059999999998, 2006.9600000000003, 329.9599999999999, 1194.7259999999999, 893.09, 152.916, 25.99, 920.946, 2090.1055, 2719.59, 4044.362, 7.968000000000001, 1571.6950000000002, 450.94, 167.232, 2198.7599999999998, 1121.362, 305.62199999999996, 3981.9680000000003, 48.81, 154.442, 191.96800000000002, 1060.3500000000001, 238.38400000000001, 3141.1995000000006, 69.908, 255.968, 134.468, 10.86, 169.54399999999998, 72.332, 3862.0980000000004, 1304.956, 610.3069999999999, 1739.4179999999997, 982.5640000000001, 794.146, 1204.8419999999999, 681.1, 5178.138000000003, 834.198, 1192.31, 1533.1979999999999, 59.76800000000001, 1083.1119999999999, 797.1160000000001, 3373.5640000000003, 174.47600000000003, 1128.898, 51.072, 734.144, 3443.904, 1883.087, 446.346, 829.5440000000001, 107.97600000000001, 2018.953, 836.958, 857.08, 1592.1960000000001, 1386.466, 432.92600000000004, 1631.902, 823.9820000000001, 1138.288, 121.646, 1379.812, 21.12, 1587.1140000000003, 43.286, 1941.952, 2052.567, 2033.256, 860.916, 3029.3860000000004, 448.08200000000005, 672.418, 2.0250000000000004, 2693.1680000000006, 208.272, 525.95, 2395.0240000000003, 969.2250000000003, 29.97, 443.80199999999996, 3712.162, 1011.6960000000001, 1290.478, 72.65, 494.8692, 968.2059999999999, 840.102, 4878.392000000001, 851.4739999999999, 196.112, 586.896, 497.59000000000003, 3378.932, 381.64, 2827.5200000000004, 66.632, 1202.2779999999998, 7194.775000000001, 178.526, 639.9740000000002, 6491.293, 246.5, 2601.797, 2367.564, 1874.8980000000001, 1071.2839999999999, 934.1030000000001, 1005.654, 2922.667, 89.64, 1415.7259999999999, 1962.13, 707.8240000000001, 3445.7720000000004, 3262.42, 2535.8500000000004, 31.12, 11525.006, 3924.3200000000006, 500.38, 1836.0520000000001, 6982.058000000001, 1783.5040000000001, 4220.593999999999, 3033.7569999999996, 3722.2729999999997, 2382.958, 1058.364, 1158.4140000000002, 1269.266, 275.218, 505.5799999999999, 851.092, 222.12, 2133.5350000000003, 2248.1940000000004, 1011.8955000000001, 2390.7580000000003, 371.65999999999997, 3219.554, 824.97, 77.88, 378.494, 2135.0899999999997, 720.086, 15.127999999999998, 2262.2960000000003, 831.145, 1425.412, 1395.333, 104.51, 244.24, 2122.044, 3211.0090000000005, 3106.106, 5528.551, 2800.846, 834.8739999999999, 11.481000000000002, 3073.073, 12196.997, 4620.2919999999995, 3536.9040000000005, 542.178, 1127.992, 3591.0771999999997, 2512.71, 702.1700000000001, 4072.3339999999994, 3885.986, 1040.784, 2861.1500000000005, 3613.5748000000003, 614.499, 3450.1879999999996, 1218.7640000000001, 13.120000000000001, 1484.0819999999999, 3109.7834999999995, 1864.4820000000002, 2760.1680000000006, 1798.3970000000004, 7130.594, 1972.6450000000002, 5185.8139999999985, 897.322, 6061.501999999999, 1338.2980000000002, 2672.728, 34.019999999999996, 3080.380000000001, 1590.8940000000002, 1448.854, 1023.3860000000002, 858.3040000000001, 5494.795999999999, 4.98, 1918.492, 935.2880000000001, 6120.656000000001, 1107.464, 3257.7599999999998, 473.31299999999993, 194.32, 7484.566000000001, 4204.968000000001, 561.486, 5148.4472000000005, 79.20000000000002, 6.36, 3251.3400000000006, 1381.344, 405.91999999999996, 2095.8300000000004, 1069.22, 255.904, 83.57600000000001, 1859.158, 743.046, 174.75, 149.44400000000002, 405.34400000000005, 701.923, 102.218, 1040.55, 1167.056, 917.63, 1732.3, 31.36, 858.712, 39.68, 3107.3160000000003, 1601.5539999999999, 161.97, 8996.784, 866.4, 197.868, 2994.476, 132.22400000000002, 762.142, 1369.476, 121.83, 69.93, 1366.0400000000002, 146.82, 837.921, 407.072, 1135.638, 392.65999999999997, 16.496000000000002, 1524.126, 983.17, 57.576, 46.72, 243.892, 147.584, 6285.8060000000005, 7264.4220000000005, 315.44999999999993, 162.344, 811.303, 21.072, 2190.81, 635.6, 7879.734000000001, 896.0219999999999, 1694.6419999999998, 8866.882, 669.368, 2356.808, 2360.3340000000003, 1061.682, 138.68000000000004, 928.311, 645.706, 226.46800000000002, 745.7739999999999, 1346.97, 682.246, 92.69999999999999, 125.3, 2659.339, 11.34, 640.7620000000001, 2161.48, 1454.9, 441.198, 970.194, 1046.334, 1294.75, 1970.5740000000003, 2906.4039999999995, 1115.197, 950.594, 1542.5300000000002, 6.12, 1466.572, 2201.8559999999998, 9335.085999999998, 421.08500000000004, 2514.5380000000005, 1414.1320000000003, 271.616, 1765.4649999999997, 720.3679999999999, 1607.1, 108.42, 434.646, 486.67199999999997, 142.208, 517.866, 1098.136, 1099.0130000000001, 2701.28, 236.95999999999998, 4835.976, 1340.2440000000001, 1283.512, 763.02, 5.98, 918.878, 455.93000000000006, 648.9119999999999, 880.46, 346.922, 122.22, 1582.008, 2471.913, 2718.214, 1799.2, 10560.978, 277.75600000000003, 1311.9699999999998, 1975.3560000000002, 5305.0779999999995, 2137.324, 1063.1850000000002, 8090.578, 438.859, 157.844, 71.08800000000001, 2316.523, 659.82, 6026.312000000002, 51.562, 1688.472, 1412.3960000000002, 1623.416, 2962.563, 430.43799999999993, 3457.099, 173.48800000000003, 147.27499999999998, 3000.92, 541.938, 17.12, 1229.5480000000002, 577.108, 2475.0940000000005, 5310.952, 893.266, 1919.6000000000001, 778.7060000000001, 877.1560000000002, 191.88, 1352.9499999999998, 1724.376, 772.786, 847.7, 1651.301, 3882.231000000001, 2616.512, 573.286, 895.895, 95.76, 2149.9600000000005, 380.20000000000005, 910.1700000000002, 2184.88, 2891.8580000000006, 1536.454, 89.94999999999999, 991.0950000000001, 1368.0480000000002, 654.587, 326.964, 5920.487999999999, 2033.3740000000003, 819.154, 1770.7759999999998, 2174.1580000000004, 1124.648, 482.58400000000006, 248.82, 497.90999999999997, 197.04999999999998, 320.388, 179.97, 1115.204, 661.3539999999999, 151.82, 3951.9605, 731.524, 923.6879999999999, 1680.266, 204.54, 15.712000000000002, 496.114, 448.79200000000003, 14.78, 4798.292, 405.35, 4187.348, 4874.298, 767.911, 322.0248, 632.188, 1656.87, 23.968000000000004, 5766.151999999999, 6792.192999999999, 2365.596000000001, 4532.042, 5226.348, 1313.536, 4493.9836, 84.99200000000002, 2094.3240000000005, 6501.586000000001, 2043.7920000000001, 2374.7299999999996, 1137.3380000000002, 2101.1820000000002, 425.88599999999997, 2043.126, 4751.082, 3839.312, 1232.004, 615.57, 1322.145, 2286.05, 3443.0910000000003, 2698.1665000000003, 1992.9858000000002, 99.13600000000001, 1307.7920000000001, 525.884, 781.4140000000002, 18452.971999999994, 1680.6960000000001, 5912.782000000001, 830.4000000000001, 973.7119999999999, 561.5360000000001, 546.9200000000001, 282.753, 33.064, 1650.6180000000006, 3335.888, 1620.1499999999999, 142.182, 2953.3460000000005, 307.92, 946.174, 7951.592000000002, 188.28, 467.42199999999997, 1365.498, 783.9600000000002, 978.79, 2899.021, 131.154, 159.002, 3750.4990000000007, 453.374, 3802.7960000000003, 3888.818000000001, 4266.898799999999, 773.2560000000001, 3810.464, 993.8999999999999, 479.97, 4723.478, 4944.296, 4914.938, 2945.1380000000004, 2774.062, 2145.718, 36.72, 142.684, 3958.932, 638.4620000000001, 3070.333, 1176.891, 317.044, 100.61600000000001, 6394.538000000002, 7978.551, 8329.743, 1651.2390000000003, 3428.3720000000003, 300.59200000000004, 970.142, 7365.454999999999, 4684.616, 5269.816000000001, 944.2860000000001, 5267.003999999999, 3878.2760000000003, 4709.095000000001, 1855.483, 3459.7100000000005, 6102.250000000001, 1981.1149999999996, 1194.088, 828.654, 2637.087, 628.5419999999999, 12185.134, 7051.35, 815.1120000000001, 134.54000000000002, 1043.128, 6965.857, 1938.2600000000002, 10488.055, 1829.418, 959.4899999999999, 1277.6799999999998, 773.774, 731.768, 1481.8280000000002, 2079.554, 2070.272, 33.74, 3395.59, 892.98, 274.49100000000004, 848.5199999999998, 4619.329999999999, 1056.038, 2140.2799999999997, 6230.2919999999995, 2013.7149999999997, 767.8380000000001, 2546.643, 4212.371999999999, 450.33400000000006, 418.66600000000005, 3055.28, 331.914, 1007.52, 294.84200000000004, 3749.335, 913.354, 922.327, 32.67, 2263.0119999999997, 904.3539999999999, 773.764, 227.10299999999998, 1241.516, 1058.43, 1337.442, 2964.8173999999995, 287.32599999999996, 1314.59, 1150.29, 47.904, 117.79999999999998, 1448.676, 430.492, 2847.6459999999997, 17.62, 1450.126, 2000.104, 228.82200000000003, 1240.02, 778.2360000000001, 166.59, 843.1000000000001, 710.8040000000001, 1252.952, 1973.708, 353.28000000000003, 4791.35, 49.61600000000001, 2014.381, 542.746, 1027.7579999999998, 2166.248, 899.568, 3332.6360000000004, 14816.068, 1257.2980000000002, 3567.026, 3252.88, 2933.5160000000005, 1504.702, 81.4, 656.407, 4981.010799999999, 5972.987999999999, 822.9700000000001, 32.528, 808.47, 114.41999999999999, 1971.2905000000003, 6401.93, 1626.71, 755.529, 319.80600000000004, 69.66, 1345.824, 652.9300000000001, 332.33799999999997, 944.429, 3431.4590000000003, 2033.2400000000002, 1254.564, 947.6920000000001, 1199.222, 928.558, 678.1129999999998, 61.608000000000004, 576.5756, 795.296, 1053.26, 1390.1259999999997, 4108.37, 399.10999999999996, 1386.346, 1389.4050000000004, 185.12300000000002, 3183.3698, 2549.468, 3658.5540000000005, 1078.222, 449.46900000000005, 970.384, 3066.378, 4182.061999999999, 421.264, 221.024, 1830.508, 4919.182, 2997.5780000000004, 538.0200000000001, 336.56199999999995, 241.436, 886.026, 270.23999999999995, 2084.908, 1480.1030000000003, 691.1080000000001, 736.8904, 5058.362, 135.706, 2952.036, 279.414, 491.1120000000001, 31.35, 2227.038, 939.1330000000002, 2513.343, 1580.894, 1679.968, 1156.018, 4057.51, 2724.1940000000004, 3896.672, 1031.1554999999998, 2115.941, 1028.2279999999998, 595.656, 579.019, 1287.6140000000003, 1508.352, 4224.136, 1644.906, 4521.9911999999995, 4721.977, 639.83, 169.192, 6963.404000000001, 476.354, 380.37800000000004, 1620.25, 1980.2640000000001, 1671.214, 359.214, 1728.8919999999998, 3.816, 504.542, 3598.934, 2132.2290000000003, 316.636, 2191.8729999999996, 2106.7940000000003, 2283.208, 3685.9440000000004, 556.314, 898.1880000000001, 2399.96, 798.7420000000001, 2012.3020000000001, 1142.68, 1170.564, 1391.294, 523.376, 1558.028, 2085.65, 531.348, 20.07, 503.67600000000004, 1424.0259999999998, 3479.624, 1823.0700000000004, 708.726, 3693.0839999999994, 2643.1640000000007, 440.73599999999993, 1949.872, 80.56400000000001, 9517.288, 7078.484000000001, 512.446, 692.95, 8551.054000000002, 524.54, 4590.344000000001, 685.0560000000002, 361.98800000000006, 190.66, 6190.538, 1443.6319999999998, 235.46800000000002, 3162.8300000000004, 1261.8100000000002, 9354.854, 1595.849, 5360.202, 327.044, 3848.565000000001, 2184.327, 4356.061, 2506.6460000000006, 5564.005999999999, 491.55, 15.920000000000002, 4367.347, 7285.025999999998, 849.6500000000001, 4979.226, 1511.9299999999998, 1648.1880000000003, 7359.918000000001, 338.172, 7871.213000000002, 2395.7860000000005, 6450.4619999999995, 1412.213, 1486.576, 559.2710000000001, 1944.08, 540.7599999999999, 2978.466, 5418.022000000001, 2504.4799999999996, 19.98, 6684.615999999999, 1499.652, 2749.21, 608.356, 1496.5890000000002, 239.358, 5635.354000000001, 8405.802, 134.332, 1017.9399999999999, 3473.597, 126.352, 2781.8702, 1333.8580000000002, 4537.201000000001, 15158.877000000002, 3352.3940000000002, 529.085, 999.8679999999999, 1086.3200000000002, 408.726, 46.96, 4025.73, 523.9280000000001, 2921.4299999999994, 6294.386, 4536.937000000001, 10668.095999999998, 2355.0640000000003, 4288.750000000001, 2413.3779999999997, 384.1, 4751.491999999999, 4007.5480000000002, 1815.218, 2911.3859999999995, 6633.420200000001, 834.6579999999999, 559.2, 4755.2339999999995, 13694.882799999996, 1469.756, 7397.272000000001, 2988.274, 2236.184, 35.712, 1153.1090000000002, 4959.641, 3666.157, 5048.1720000000005, 1618.254, 6912.944, 491.88800000000003, 6645.281999999999, 5331.178, 9951.182, 1403.8419999999999, 2639.6379999999995, 1453.136, 10.68, 2916.5139999999997, 7643.041, 5470.390000000001, 3873.5589999999997, 2823.9650000000006, 580.936, 3897.714, 306.88800000000003, 858.7020000000001, 2027.7579999999998, 3645.9110000000005, 1895.926, 377.736, 2140.94, 7442.020999999998, 1926.776, 6233.054, 2698.927, 814.5939999999999, 177.636, 1657.3508000000006, 2915.534, 713.79], '_argargargarg}}'...
2020-03-04,17:44:16 [INFO] (base_handler.py:base_handler:121): function to evaluate=def _user_script(tabpy, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6):
 
 import statsmodels.api as sm
 
 import pandas as pd
 import numpy as np
 import scipy.stats as scs
 from datetime import datetime
 df = pd.DataFrame({'Month':_arg1, 'milk':_arg2})
 df['milk'] = df['milk'].astype('float64')
 df['Month'] = pd.to_datetime(_arg2)
 df = df[['Month','milk']].set_index('Month')
 df = df.fillna(0)
 
 
 model=sm.tsa.ARIMA(endog = df['milk'], order=(min(_arg4),min(_arg5),min(_arg6)))
 results=model.fit()
 fitted_vals = list(results.fittedvalues.values)
 
 return(fitted_vals)

2020-03-04,17:44:36 [INFO] (web.py:web:2242): 200 POST /evaluate (::1) 20183.25ms
